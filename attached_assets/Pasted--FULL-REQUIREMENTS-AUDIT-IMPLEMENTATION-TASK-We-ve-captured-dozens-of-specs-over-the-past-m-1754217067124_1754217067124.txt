üö® **FULL REQUIREMENTS AUDIT & IMPLEMENTATION TASK**

We‚Äôve captured dozens of specs over the past months.  
Your job: **verify the live Peergos workspace satisfies _every_ requirement below, fix what‚Äôs missing, and produce both a ‚Äúcompliance matrix‚Äù and automated tests.**

---

## 1Ô∏è‚É£ Master Requirements Checklist

### Core Architecture
- Vite + React + TypeScript frontend  
- Express API layer (tax engines)  
- Supabase DB & storage (mock keys allowed)  

### Functional Modules
1. **Setup Wizard (5 steps)**  
   1. Business Info  
   2. Revenue Declaration (no-international-sales path)  
   3. Free Zone & License (Mainland / Free-Zone + QFZP toggle)  
   4. TRN Upload & Tax Registration  
   5. Summary + Review  
2. **Dashboard** ‚Äì clean, simplified ‚ÄúApple-grade‚Äù UI showing CIT/VAT status, alerts, next actions  
3. **CIT Calculator & Filing** ‚Äì UAE CIT logic incl. 0 % Free-Zone regime, small-business relief toggle  
4. **VAT Returns** ‚Äì 3-tab page (Return, Calculator, Filing History) with accurate totals  
5. **Accounting** ‚Äì minimal ledger (revenue, expenses), auto-syncs to Financial Reports  
6. **Financial Reports** ‚Äì on-demand P&L + Balance Sheet generation  
7. **Invoicing** ‚Äì phase-2 e-invoicing placeholder (QR, hash, signature)  
8. **Transfer Pricing** ‚Äì simplified navigation only (full TP postponed)  
9. **Calendar** ‚Äì tax deadlines & smart reminders (placeholder OK)  
10. **AI Tax Assistant** ‚Äì single chat tab (duplicate removed)  

### Cross-Cutting
- **i18n**: English ‚Üî ÿßŸÑÿπÿ±ÿ®Ÿäÿ© toggle, RTL layout verified  
- **Responsive**: mobile breakpoint tested (‚â§ 375 px)  
- **Permissions**: SME, Tax Agent, Admin, FTA roles  
- **Accessibility**: no critical Axe violations  
- **UAE FTA compliance**: Phase 2 e-invoice schema, QFZP declaration, 9-digit TRN validation  
- **Docs**: `README.md` & `Replit.md` with changelog  

### Nice-to-Have (implement if quick)  
- POS / bank integration placeholders  
- Smart notifications service skeleton  

---

## 2Ô∏è‚É£ Deliverables

### A. **Compliance Matrix**
File: `docs/compliance-matrix.md`  
| Requirement | Implemented? | File / Component | Notes / Fix link |
|-------------|--------------|------------------|------------------|

Mark ‚úÖ or ‚ùå, and link each ‚ùå to a Git commit that fixes it.

### B. **Code Fixes**
For every ‚ùå above, create or patch code so the requirement becomes ‚úÖ.  
Follow existing simplified UI style (no noisy shadows).

### C. **Automated Tests**
1. **Unit tests** ‚Äì Jest/RTL for all calculators, wizard steps, hooks  
2. **E2E tests** ‚Äì Playwright scripts:  
   - Mainland wizard flow (no international sales)  
   - Free-Zone QFZP flow (with uploads)  
   - CIT filing, VAT filing, invoice creation  
   - English ‚Üí Arabic RTL toggle  
3. **CI pipeline** ‚Äì GitHub Actions running `npm test` + `npx playwright test`

### D. **Final Report**
Print to console and commit as `audit-report.txt`:
- Overall pass/fail summary  
- Coverage %  
- Remaining TODO (if any)  

---

## 3Ô∏è‚É£ Workflow

1. **Scan**:  
   ```bash
   grep -RniE "Coming soon|TODO|placeholder" client/src
Fix all placeholders & schema gaps.
Generate tests & run locally until green.
Update docs and commit:
git commit -am "chore: complete requirements audit, fix gaps, add tests & docs"
git push
Post the compliance-matrix table in chat for quick review.
‚ö†Ô∏è Do not mark a requirement ‚úÖ unless a passing test proves it.
Please begin the audit now, replace every missing piece, and produce the compliance matrix + tests. Thank you! üöÄ