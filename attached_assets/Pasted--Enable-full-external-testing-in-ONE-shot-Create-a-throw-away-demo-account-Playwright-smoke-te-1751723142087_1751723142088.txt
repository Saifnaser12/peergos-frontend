🧪  Enable full external testing in ONE shot

Create a throw-away demo account + Playwright smoke test and expose both in production
without breaking the existing SPA.

────────────────────────────────────────
1 ▸  Edit / create **server.js**  (root)

```js
import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import bcrypt from 'bcrypt';           // or your hash util
import db from './peergos-fixed/src/utils/db.js'; // ← adjust to actual DB helper

const app = express();
const __dirname = path.dirname(fileURLToPath(import.meta.url));

/* ——— PUBLIC HEALTH ENDPOINT (already present) ——— */
app.get('/api/public/demo', (_req,res)=>res.json({
  ok:true,name:'Peergos Tax Compliance Hub',version:'1.0.0',
  vatRate:0.05,citSmallBusinessReliefAED:375000,
  ts:new Date().toISOString()
}));

/* ——— SEED DEMO ACCOUNT (idempotent) ——— */
let seeded=false;
app.post('/api/public/seedDemo', async (_req,res)=>{
  if(seeded) return res.status(409).json({error:'demo-exists'});
  const pwd='Demo1234!';
  const company=await db.company.create({data:{name:'Demo Trading LLC',trn:'100000000001'}});
  await db.user.create({
    data:{email:'demo@peergos.test',password:await bcrypt.hash(pwd,10),role:'ACCOUNTANT',companyId:company.id}
  });
  seeded=true;
  res.status(201).json({ok:true,email:'demo@peergos.test',password:pwd,loginUrl:'/login'});
});

/* ——— SERVE BUILT SPA ——— */
app.use(express.static(path.join(__dirname,'peergos-fixed','dist')));
app.get('*',(_,res)=>res.sendFile(path.join(__dirname,'peergos-fixed','dist','index.html')));

/* ——— START ——— */
const PORT=process.env.PORT||5000;
app.listen(PORT,'0.0.0.0',()=>console.log('Peergos on',PORT));
2 ▸ Add Playwright smoke-suite tests/e2e/peergos.spec.ts

import { test, expect } from '@playwright/test';
const BASE='https://tax-compliance-hub-saifnalhawamdeh.replit.app';

test.beforeAll(async({request})=>{
  await request.post(`${BASE}/api/public/seedDemo`);   // idempotent
});
async function login(page){
  await page.goto(`${BASE}/login`);
  await page.fill('input[type=email]','demo@peergos.test');
  await page.fill('input[type=password]','Demo1234!');
  await page.click('button[type=submit]');
  await page.waitForURL('**/dashboard');
}
test('Dashboard KPIs',async({page})=>{
  await login(page);
  await expect(page.getByText(/VAT payable/i)).toBeVisible();
});
3 ▸ Add dev-dep & script in package.json

{
  "scripts": {
    "build": "vite build",
    "preview": "vite preview --port 5000 --host 0.0.0.0",
    "test:e2e": "playwright install chromium && playwright test --reporter=list,html"
  },
  "devDependencies": { "@playwright/test": "^1.53.2" }
}
4 ▸ Deploy settings

Build command → pnpm run build && pnpm run test:e2e
Run command → node server.js
Port → 5000
5 ▸ Redeploy.
Success checklist:

POST /api/public/seedDemo   → 201 JSON with demo creds
GET  /api/public/demo       → JSON health payload
/playwright-report/         → HTML test report green